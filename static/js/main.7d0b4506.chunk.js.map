{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","utils/filterTodos.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectTodo","selectedTodo","className","map","todo","classNames","id","completed","title","type","onClick","TodoFilter","filterBy","query","setFilterBy","setQuery","value","onChange","event","target","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","FilterBy","Loader","TodoModal","useState","user","setUser","isLoading","setIsLoading","useEffect","userId","result","href","email","name","App","setTodos","setSelectedTodo","All","visibleTodo","filter","Active","Completed","Error","normalizeQuery","toLowerCase","trim","includes","filterTodo","ReactDOM","render","document","getElementById"],"mappings":"oPAUaA,EAA4B,SAAC,GAInC,IAHLC,EAGI,EAHJA,MACAC,EAEI,EAFJA,WACAC,EACI,EADJA,aAEA,OACE,wBAAOC,UAAU,+BAAjB,UACE,gCACE,+BACE,mCACA,6BACE,sBAAMA,UAAU,OAAhB,SACE,mBAAGA,UAAU,qBAGjB,uCACA,wCAIJ,gCACGH,EAAMI,KAAI,SAAAC,GAAI,OACb,qBAEE,UAAQ,OACRF,UAAWG,IACT,CAAE,4BAA6BD,EAAKE,MAAL,OAAYL,QAAZ,IAAYA,OAAZ,EAAYA,EAAcK,MAJ7D,UAOE,oBAAIJ,UAAU,eAAd,SAA8BE,EAAKE,KACnC,oBAAIJ,UAAU,eAAd,SACGE,EAAKG,WACJ,sBAAML,UAAU,OAAO,UAAQ,gBAA/B,SACE,mBAAGA,UAAU,qBAKnB,oBAAIA,UAAU,2BAAd,SACE,mBAAGA,UAAWG,IAAW,CACvB,mBAAoBD,EAAKG,UACzB,mBAAoBH,EAAKG,YAF3B,SAKGH,EAAKI,UAGV,oBAAIN,UAAU,8BAAd,SACE,wBACE,UAAQ,eACRA,UAAU,SACVO,KAAK,SACLC,QAAS,WACPV,EAAWI,IALf,SAQE,sBAAMF,UAAU,OAAhB,SACE,mBAAGA,UAAWG,IACZ,MACA,CAAE,SAAUD,EAAKE,MAAL,OAAYL,QAAZ,IAAYA,OAAZ,EAAYA,EAAcK,KACtC,CAAE,eAAgBF,EAAKE,MAAL,OAAYL,QAAZ,IAAYA,OAAZ,EAAYA,EAAcK,gBArC/CF,EAAKE,aCxBTK,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,SACAC,EAGI,EAHJA,MACAC,EAEI,EAFJA,YACAC,EACI,EADJA,SAEA,OACE,uBAAMb,UAAU,mBAAhB,UACE,mBAAGA,UAAU,UAAb,SACE,sBAAMA,UAAU,SAAhB,SACE,yBACE,UAAQ,eACRc,MAAOJ,EACPK,SAAU,SAACC,GAAD,OAAWJ,EAAYI,EAAMC,OAAOH,QAHhD,UAKE,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,YAAd,8BAKN,oBAAGd,UAAU,qDAAb,UACE,uBACE,UAAQ,cACRO,KAAK,OACLP,UAAU,QACVkB,YAAY,YACZJ,MAAOH,EACPI,SAAU,SAACC,GAAD,OAAWH,EAASG,EAAMC,OAAOH,UAE7C,sBAAMd,UAAU,eAAhB,SACE,mBAAGA,UAAU,8BAGdW,GACC,sBAAMX,UAAU,gBAAgBmB,MAAO,CAAEC,cAAe,OAAxD,SAEE,wBACE,UAAQ,oBACRb,KAAK,SACLP,UAAU,SACVQ,QAAS,kBAAMK,EAAS,gBCrCtC,SAASQ,EAAOC,GAEd,IARYC,EAQNC,EAZS,iEAYYF,EAAM,QAGjC,OAXYC,EAWA,IAVL,IAAIE,SAAQ,SAAAC,GACjBC,WAAWD,EAASH,OAUnBK,MAAK,kBAAMC,MAAML,MACjBI,MAAK,SAAAE,GAAG,OAAIA,EAAIC,U,MAGd,ICtBKC,ECCCC,EAAmB,kBAC9B,qBAAKjC,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,uBCMNkC,EAA6B,SAAC,GAGpC,IAFLhC,EAEI,EAFJA,KACAJ,EACI,EADJA,WAEA,EAAwBqC,mBAAsB,MAA9C,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KASA,OAPAC,qBAAU,WHQW,IAACC,KGPZvC,EAAKuC,OHO0BpB,EAAG,iBAAiBoB,KGPtCb,MAAK,SAAAc,GACxBL,EAAQK,GACRH,GAAa,QAEd,IAGD,sBAAKvC,UAAU,kBAAkB,UAAQ,QAAzC,UACE,qBAAKA,UAAU,qBAEdsC,EACC,cAAC,EAAD,IAEA,sBAAKtC,UAAU,aAAf,UACE,yBAAQA,UAAU,kBAAlB,UACE,qBACEA,UAAU,0CACV,UAAQ,eAFV,yBAIYE,EAAKE,MAGjB,wBACEG,KAAK,SACLP,UAAU,SACV,UAAQ,cACR,aAAW,cACXQ,QAAS,kBAAMV,EAAW,YAI9B,sBAAKE,UAAU,kBAAf,UACE,mBAAGA,UAAU,QAAQ,UAAQ,cAA7B,SACGE,EAAKI,QAGR,oBAAGN,UAAU,QAAQ,UAAQ,aAA7B,UAEIE,EAAKG,UACD,wBAAQL,UAAU,mBAAlB,kBACA,wBAAQA,UAAU,kBAAlB,qBAEL,OAED,mBAAG2C,KAAI,iBAAKP,QAAL,IAAKA,OAAL,EAAKA,EAAMQ,OAAlB,gBACGR,QADH,IACGA,OADH,EACGA,EAAMS,oB,iBF9DXb,K,gBAAAA,E,sBAAAA,E,WAAAA,M,KAKL,IGOMc,EAAgB,WAC3B,MAA0BX,mBAAiB,IAA3C,mBAAOtC,EAAP,KAAckD,EAAd,KACA,EAAkCZ,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAwCJ,mBAAsB,MAA9D,mBAAOpC,EAAP,KAAqBiD,EAArB,KACA,EAAgCb,mBAAmBH,EAASiB,KAA5D,mBAAOvC,EAAP,KAAiBE,EAAjB,KACA,EAA0BuB,mBAAS,IAAnC,mBAAOxB,EAAP,KAAcE,EAAd,KAEMf,EAAa,SAACI,GAClB8C,EAAgB9C,IAGZgD,EHlBkB,SACxBrD,EACAa,EACAC,GAEA,IAAIuC,EAAW,YAAOrD,GAEtBqD,EAAcA,EAAYC,QAAO,SAAAjD,GAC/B,OAAQQ,GACN,KAAKsB,EAASoB,OACZ,OAAQlD,EAAKG,UACf,KAAK2B,EAASqB,UACZ,OAAOnD,EAAKG,UACd,KAAK2B,EAASiB,IACZ,OAAOC,EACT,QACE,MAAM,IAAII,MAAM,kCAItB,IAAMC,EAAiB5C,EAAM6C,cAAcC,OAW3C,OATI9C,IACFuC,EAAcA,EAAYC,QAAO,SAAAjD,GAC/B,OAAOA,EACJI,MACAkD,cACAE,SAASH,OAITL,EGbaS,CAAW9D,EAAOa,EAAUC,GAShD,OAPA6B,qBAAU,WJHkBnB,EAAY,UII3BO,MAAK,SAAAc,GACdK,EAASL,GACTH,GAAa,QAEd,IAGD,qCACE,qBAAKvC,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,oBAEA,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,CAAYW,MAAOA,EAAOD,SAAUA,EAAUE,YAAaA,EAAaC,SAAUA,MAGpF,qBAAKb,UAAU,QAAf,SAEIsC,EACI,cAAC,EAAD,IACA,cAAC,EAAD,CAAUzC,MAAOqD,EAAapD,WAAYA,EAAYC,aAAcA,aAMjFA,GAAgB,cAAC,EAAD,CAAWG,KAAMH,EAAcD,WAAYA,QCpDlE8D,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.7d0b4506.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectTodo: (todo: Todo) => void;\n  selectedTodo: Todo | null;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectTodo,\n  selectedTodo,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr\n            key={todo.id}\n            data-cy=\"todo\"\n            className={classNames(\n              { 'has-background-info-light': todo.id === selectedTodo?.id },\n            )}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n\n            <td className=\"is-vcentered is-expanded\">\n              <p className={classNames({\n                'has-text-success': todo.completed,\n                'has-text-danger': !todo.completed,\n              })}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => {\n                  selectTodo(todo);\n                }}\n              >\n                <span className=\"icon\">\n                  <i className={classNames(\n                    'far',\n                    { 'fa-eye': todo.id !== selectedTodo?.id },\n                    { 'fa-eye-slash': todo.id === selectedTodo?.id },\n\n                  )}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { FilterBy } from '../../utils/filterTodos';\n\ntype Props = {\n  filterBy: FilterBy\n  query: string\n  setFilterBy: (value: FilterBy) => void\n  setQuery: (value: string) => void\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  filterBy,\n  query,\n  setFilterBy,\n  setQuery,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filterBy}\n            onChange={(event) => setFilterBy(event.target.value as FilterBy)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => setQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import { Todo } from '../types/Todo';\n\nexport enum FilterBy {\n  Active = 'active',\n  Completed = 'completed',\n  All = 'all',\n}\nexport const filterTodo = (\n  todos: Todo[],\n  filterBy: FilterBy,\n  query: string,\n) => {\n  let visibleTodo = [...todos];\n\n  visibleTodo = visibleTodo.filter(todo => {\n    switch (filterBy) {\n      case FilterBy.Active:\n        return !todo.completed;\n      case FilterBy.Completed:\n        return todo.completed;\n      case FilterBy.All:\n        return visibleTodo;\n      default:\n        throw new Error('not valide filter argument');\n    }\n  });\n\n  const normalizeQuery = query.toLowerCase().trim();\n\n  if (query) {\n    visibleTodo = visibleTodo.filter(todo => {\n      return todo\n        .title\n        .toLowerCase()\n        .includes(normalizeQuery);\n    });\n  }\n\n  return visibleTodo;\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  todo: Todo;\n  selectTodo: (todo: Todo | null) => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  todo,\n  selectTodo,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    getUser(todo.userId).then(result => {\n      setUser(result);\n      setIsLoading(false);\n    });\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              aria-label=\"close modal\"\n              onClick={() => selectTodo(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {\n                todo.completed\n                  ? <strong className=\"has-text-success\">Done</strong>\n                  : <strong className=\"has-text-danger\">Planned</strong>\n              }\n              {' by '}\n\n              <a href={`${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { FilterBy, filterTodo } from './utils/filterTodos';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [filterBy, setFilterBy] = useState<FilterBy>(FilterBy.All);\n  const [query, setQuery] = useState('');\n\n  const selectTodo = (todo: Todo | null) => {\n    setSelectedTodo(todo);\n  };\n\n  const visibleTodo = filterTodo(todos, filterBy, query);\n\n  useEffect(() => {\n    getTodos().then(result => {\n      setTodos(result);\n      setIsLoading(false);\n    });\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter query={query} filterBy={filterBy} setFilterBy={setFilterBy} setQuery={setQuery} />\n            </div>\n\n            <div className=\"block\">\n              {\n                isLoading\n                  ? <Loader />\n                  : <TodoList todos={visibleTodo} selectTodo={selectTodo} selectedTodo={selectedTodo} />\n              }\n            </div>\n          </div>\n        </div>\n      </div>\n      {selectedTodo && <TodoModal todo={selectedTodo} selectTodo={selectTodo} />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}